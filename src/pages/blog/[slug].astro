---
import Layout from '../../layouts/Layout.astro';
import { queryCMS } from '../../lib/cms';
import BlogPostCard from '../../components/BlogPostCard.astro';
import { StructuredText } from '@datocms/astro';

export async function getStaticPaths() {
  const allBlogsQuery = `
    query {
      allBlogs {
        slug
      }
    }
  `;
  const { allBlogs } = await queryCMS(allBlogsQuery);
  return allBlogs.map(blog => ({ params: { slug: blog.slug } }));
}

const { slug } = Astro.params;

const query = `
  query GetBlogPostBySlug($slug: String) {
    blog(filter: { slug: { eq: $slug } }) {
      id
      title
      slug
      publishDate
      author {
        name
        profileImage {
          url
          alt
        }
      }
      categories {
        title
        slug
      }
      featuredImage {
        url
        alt
      }
      content {
        value
      }
      relatedContent {
        ... on BlogRecord {
          id
          title
          slug
          featuredImage {
            url
            alt
          }
          categories {
            title
            slug
          }
        }
      }
    }
  }
`;

const variables = { slug };
const { blog } = await queryCMS(query, variables);

if (!blog) {
  return Astro.redirect('/404');
}

const formattedDate = new Date(blog.publishDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout title={blog.title}>
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-6 uppercase bg-foreground text-background inline-block p-4">{blog.title}</h1>
    
    <div class="flex items-center mb-4">
      {blog.author && blog.author.profileImage && (
        <img 
          src={blog.author.profileImage.url || "/placeholder.svg"} 
          alt={blog.author.profileImage.alt || blog.author.name} 
          class="w-12 h-12 object-cover mr-4 border border-border"
        />
      )}
      <div>
        {blog.author && <p class="font-semibold">{blog.author.name}</p>}
        <p class="text-muted-foreground">{formattedDate}</p>
      </div>
    </div>
    
    {blog.featuredImage && (
      <img 
        src={blog.featuredImage.url || "/placeholder.svg"} 
        alt={blog.featuredImage.alt || blog.title} 
        class="w-full h-64 object-cover mb-6 border border-border"
      />
    )}
    
    {blog.categories && blog.categories.length > 0 && (
      <div class="mb-4">
        <ul class="flex flex-wrap gap-2">
          {blog.categories.map(category => (
            <li class="bg-muted text-muted-foreground px-3 py-1">
              <a href={`/categories/${category.slug}`}>{category.title}</a>
            </li>
          ))}
        </ul>
      </div>
    )}
    
    <div class="prose prose-invert max-w-none mb-8">
      <StructuredText
        data={blog.content}
      />
    </div>
    
    {blog.relatedContent && blog.relatedContent.length > 0 && (
      <div>
        <h2 class="text-2xl font-semibold mb-4 uppercase bg-foreground text-background inline-block p-2">Related Posts</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {blog.relatedContent.map(relatedPost => (
            <div class="border border-border p-4">
              <BlogPostCard blogPost={relatedPost} />
            </div>
          ))}
        </div>
      </div>
    )}
  </div>
</Layout>

